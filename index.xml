<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <link>http://tutswiki.com/index.xml</link>
    <description>Recent content on </description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 01 Jul 2013 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://tutswiki.com/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Introduction to Hugo</title>
      <link>http://tutswiki.com/overview/introduction/</link>
      <pubDate>Mon, 01 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>http://tutswiki.com/overview/introduction/</guid>
      <description>

&lt;h2 id=&#34;what-is-hugo&#34;&gt;What is Hugo?&lt;/h2&gt;

&lt;p&gt;Hugo is a general-purpose website framework. Technically speaking, Hugo is
a static site generator. This means that, unlike systems like WordPress,
Ghost and Drupal, which run on your web server expensively building a page
every time a visitor requests one, Hugo does the building when you create
your content. Since websites are viewed far more often than they are
edited, Hugo is optimized for website viewing while providing a great
writing experience.&lt;/p&gt;

&lt;p&gt;Sites built with Hugo are extremely fast and very secure. Hugo sites can
be hosted anywhere, including &lt;a href=&#34;https://www.heroku.com/&#34;&gt;Heroku&lt;/a&gt;, &lt;a href=&#34;https://www.godaddy.com/&#34;&gt;GoDaddy&lt;/a&gt;, &lt;a href=&#34;http://www.dreamhost.com/&#34;&gt;DreamHost&lt;/a&gt;,
&lt;a href=&#34;https://pages.github.com/&#34;&gt;GitHub Pages&lt;/a&gt;, &lt;a href=&#34;http://cloud.google.com/storage/&#34;&gt;Google Cloud Storage&lt;/a&gt;, &lt;a href=&#34;http://aws.amazon.com/s3/&#34;&gt;Amazon S3&lt;/a&gt; and &lt;a href=&#34;http://aws.amazon.com/cloudfront/&#34; title=&#34;Amazon CloudFront&#34;&gt;CloudFront&lt;/a&gt;, and work well with CDNs.
Hugo sites run without dependencies on expensive runtimes like Ruby,
Python or PHP and without dependencies on any databases.&lt;/p&gt;

&lt;p&gt;We think of Hugo as the ideal website creation tool. With nearly instant
build times and the ability to rebuild whenever a change is made, Hugo
provides a very fast feedback loop. This is essential when you are
designing websites, but also very useful when creating content.&lt;/p&gt;

&lt;h2 id=&#34;what-makes-hugo-different&#34;&gt;What makes Hugo different?&lt;/h2&gt;

&lt;p&gt;Web site generators render content into HTML files. Most are &amp;ldquo;dynamic
site generators.&amp;rdquo; That means the HTTP
server (which is the program running on your website that the user&amp;rsquo;s
browser talks to) runs the generator to create a new HTML file
each and every time a user wants to view a page.&lt;/p&gt;

&lt;p&gt;Creating the page dynamically means that the computer hosting
the HTTP server has to have enough memory and CPU to effectively run
the generator around the clock. If not, then the user has to wait
in a queue for the page to be generated.&lt;/p&gt;

&lt;p&gt;Nobody wants users to wait longer than needed, so the dynamic site
generators programmed their systems to cache the HTML files. When
a file is cached, a copy of it is temporarily stored on the computer.
It is much faster for the HTTP server to send that copy the next time
the page is requested than it is to generate it from scratch.&lt;/p&gt;

&lt;p&gt;Hugo takes cacheing a step further. All HTML files are rendered on your
computer. You can review the files before you copy them to the computer
hosting the HTTP server. Since the HTML files aren&amp;rsquo;t generated dynamically,
we say that Hugo is a &amp;ldquo;static site generator.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;Not running a web site generator on your HTTP server has many benefits.
The most noticeable is performance - HTTP servers are very good at
sending files. So good that you can effectively serve the same number
of pages with a fraction of the memory and CPU needed for a dynamic site.&lt;/p&gt;

&lt;p&gt;Hugo has two components to help you build and test your web site. The
one that you&amp;rsquo;ll probably use most often is the built-in HTTP server.
When you run &lt;code&gt;hugo server&lt;/code&gt;, Hugo renders all of your content into
HTML files and then runs a HTTP server on your computer so that you
can see what the pages look like.&lt;/p&gt;

&lt;p&gt;The second component is used when you&amp;rsquo;re ready to publish your web
site to the computer running your website. Running Hugo without any
actions will rebuild your entire web site using the &lt;code&gt;baseurl&lt;/code&gt; setting
from your site&amp;rsquo;s configuration file. That&amp;rsquo;s required to have your page
links work properly with most hosting companies.&lt;/p&gt;

&lt;h2 id=&#34;how-fast-is-hugo&#34;&gt;How fast is Hugo?&lt;/h2&gt;

&lt;div class=&#34;video-container&#34;&gt;
&lt;iframe class=&#34;youtube-player&#34; type=&#34;text/html&#34; width=&#34;100%&#34; height=&#34;auto&#34; src=&#34;http://www.youtube.com/embed/CdiDYZ51a2o&#34; allowfullscreen frameborder=&#34;0&#34;&gt;
&lt;/iframe&gt;
&lt;/div&gt;


&lt;h2 id=&#34;what-does-hugo-do&#34;&gt;What does Hugo do?&lt;/h2&gt;

&lt;p&gt;In technical terms, Hugo takes a source directory of Markdown files and
templates and uses these as input to create a complete website.&lt;/p&gt;

&lt;p&gt;Hugo boasts the following features:&lt;/p&gt;

&lt;h3 id=&#34;general&#34;&gt;General&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Extremely fast build times (~1&amp;nbsp;ms per page)&lt;/li&gt;
&lt;li&gt;Completely cross platform: Runs on &lt;i class=&#34;fa fa-apple&#34;&gt;&lt;/i&gt;&amp;nbsp;Mac OS&amp;nbsp;X, &lt;i class=&#34;fa fa-linux&#34;&gt;&lt;/i&gt;&amp;nbsp;Linux, &lt;i class=&#34;fa fa-windows&#34;&gt;&lt;/i&gt;&amp;nbsp;Windows, and more!&lt;/li&gt;
&lt;li&gt;Easy &lt;a href=&#34;http://tutswiki.com/overview/installing/&#34;&gt;installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Render changes &lt;a href=&#34;http://tutswiki.com/overview/usage/&#34;&gt;on the fly&lt;/a&gt; with &lt;a href=&#34;http://tutswiki.com/extras/livereload/&#34;&gt;LiveReload&lt;/a&gt; as you develop&lt;/li&gt;
&lt;li&gt;Complete theme support&lt;/li&gt;
&lt;li&gt;Host your site anywhere&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;organization&#34;&gt;Organization&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Straightforward &lt;a href=&#34;http://tutswiki.com/content/organization/&#34;&gt;organization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Support for &lt;a href=&#34;http://tutswiki.com/content/sections/&#34;&gt;website sections&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Completely customizable &lt;a href=&#34;http://tutswiki.com/extras/urls/&#34;&gt;URLs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Support for configurable &lt;a href=&#34;http://tutswiki.com/taxonomies/overview/&#34;&gt;taxonomies&lt;/a&gt; which includes categories and tags.  Create your own custom organization of content&lt;/li&gt;
&lt;li&gt;Ability to &lt;a href=&#34;http://tutswiki.com/content/ordering/&#34;&gt;sort content&lt;/a&gt; as you desire&lt;/li&gt;
&lt;li&gt;Automatic &lt;a href=&#34;http://tutswiki.com/extras/toc/&#34;&gt;table of contents&lt;/a&gt; generation&lt;/li&gt;
&lt;li&gt;Dynamic menu creation&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://tutswiki.com/extras/urls/&#34;&gt;Pretty URLs&lt;/a&gt; support&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://tutswiki.com/extras/permalinks/&#34;&gt;Permalink&lt;/a&gt; pattern support&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://tutswiki.com/extras/aliases/&#34;&gt;Aliases&lt;/a&gt; (redirects)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;content&#34;&gt;Content&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Content written in &lt;a href=&#34;http://tutswiki.com/content/example/&#34;&gt;Markdown&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Support for TOML, YAML and JSON metadata in &lt;a href=&#34;http://tutswiki.com/content/front-matter/&#34;&gt;frontmatter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Completely &lt;a href=&#34;http://tutswiki.com/layout/homepage/&#34;&gt;customizable homepage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Support for multiple &lt;a href=&#34;http://tutswiki.com/content/types/&#34;&gt;content types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Automatic and user defined &lt;a href=&#34;http://tutswiki.com/content/summaries/&#34;&gt;summaries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://tutswiki.com/extras/shortcodes/&#34;&gt;Shortcodes&lt;/a&gt; to enable rich content inside of Markdown&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://tutswiki.com/layout/variables/&#34;&gt;&amp;ldquo;Minutes to Read&amp;rdquo;&lt;/a&gt; functionality&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://tutswiki.com/layout/variables/&#34;&gt;&amp;ldquo;Wordcount&amp;rdquo;&lt;/a&gt; functionality&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;additional-features&#34;&gt;Additional Features&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Integrated &lt;a href=&#34;https://disqus.com/&#34;&gt;Disqus&lt;/a&gt; comment support&lt;/li&gt;
&lt;li&gt;Automatic &lt;a href=&#34;http://tutswiki.com/layout/rss/&#34;&gt;RSS&lt;/a&gt; creation&lt;/li&gt;
&lt;li&gt;Support for &lt;a href=&#34;http://golang.org/pkg/html/template/&#34;&gt;Go&lt;/a&gt;, &lt;a href=&#34;https://github.com/eknkc/amber&#34;&gt;Amber&lt;/a&gt; and &lt;a href=&#34;http://ace.yoss.si/&#34;&gt;Ace&lt;/a&gt; HTML templates&lt;/li&gt;
&lt;li&gt;Syntax &lt;a href=&#34;http://tutswiki.com/extras/highlighting/&#34;&gt;highlighting&lt;/a&gt; powered by &lt;a href=&#34;http://pygments.org/&#34;&gt;Pygments&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;See what&amp;rsquo;s coming next in the &lt;a href=&#34;http://tutswiki.com/meta/roadmap/&#34;&gt;roadmap&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;who-should-use-hugo&#34;&gt;Who should use Hugo?&lt;/h2&gt;

&lt;p&gt;Hugo is for people that prefer writing in a text editor over
a browser.&lt;/p&gt;

&lt;p&gt;Hugo is for people who want to hand code their own website without
worrying about setting up complicated runtimes, dependencies and
databases.&lt;/p&gt;

&lt;p&gt;Hugo is for people building a blog, company site, portfolio, tumblog,
documentation, single page site or a site with thousands of
pages.&lt;/p&gt;

&lt;h2 id=&#34;why-did-you-write-hugo&#34;&gt;Why did you write Hugo?&lt;/h2&gt;

&lt;p&gt;I wrote Hugo ultimately for a few reasons. First, I was disappointed with
WordPress, my then website solution. It rendered slowly. I couldn&amp;rsquo;t create
content as efficiently as I wanted to and needed to be online to write
posts. The constant security updates and the horror stories of people&amp;rsquo;s
hacked blogs. I hated how content was written in HTML instead of the much
simpler Markdown. Overall, I felt like it got in my way more than it helped
me from writing great content.&lt;/p&gt;

&lt;p&gt;I looked at existing static site generators like &lt;a href=&#34;http://jekyllrb.com/&#34;&gt;Jekyll&lt;/a&gt;, &lt;a href=&#34;https://middlemanapp.com/&#34;&gt;Middleman&lt;/a&gt; and &lt;a href=&#34;http://nanoc.ws/&#34;&gt;nanoc&lt;/a&gt;.
All had complicated dependencies to install and took far longer to render
my blog with hundreds of posts than I felt was acceptable. I wanted
a framework to be able to get rapid feedback while making changes to the
templates, and the 5+-minute render times was just too slow. In general,
they were also very blog minded and didn&amp;rsquo;t have the ability to have
different content types and flexible URLs.&lt;/p&gt;

&lt;p&gt;I wanted to develop a fast and full-featured website framework without
dependencies. The &lt;a href=&#34;http://golang.org/&#34; title=&#34;The Go Programming Language&#34;&gt;Go language&lt;/a&gt; seemed to have all of the features I needed
in a language. I began developing Hugo in Go and fell in love with the
language. I hope you will enjoy using (and contributing to) Hugo as much
as I have writing it.&lt;/p&gt;

&lt;h2 id=&#34;next-steps&#34;&gt;Next Steps&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://tutswiki.com/overview/installing/&#34;&gt;Install Hugo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://tutswiki.com/overview/quickstart/&#34;&gt;Quick start&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://tutswiki.com/community/mailing-list/&#34;&gt;Join the Mailing List&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spf13/hugo&#34;&gt;Star us on GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://discuss.gohugo.io/&#34;&gt;Discussion Forum&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Hugo Quickstart Guide</title>
      <link>http://tutswiki.com/overview/quickstart/</link>
      <pubDate>Mon, 01 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>http://tutswiki.com/overview/quickstart/</guid>
      <description>

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Note: This quickstart depends on features introduced in Hugo v0.11.  If you have an earlier version of Hugo, you will need to &lt;a href=&#34;http://tutswiki.com/overview/installing/&#34;&gt;upgrade&lt;/a&gt; before proceeding.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&#34;video-container&#34;&gt;
&lt;iframe class=&#34;youtube-player&#34; type=&#34;text/html&#34; width=&#34;100%&#34; height=&#34;auto&#34; src=&#34;http://www.youtube.com/embed/w7Ft2ymGmfc&#34; allowfullscreen frameborder=&#34;0&#34;&gt;
&lt;/iframe&gt;
&lt;/div&gt;


&lt;h2 id=&#34;step-1-install-hugo&#34;&gt;Step 1. Install Hugo&lt;/h2&gt;

&lt;p&gt;Go to &lt;a href=&#34;https://github.com/spf13/hugo/releases&#34;&gt;Hugo Releases&lt;/a&gt; and download the
appropriate version for your OS and architecture.&lt;/p&gt;

&lt;p&gt;Save the main executable as &lt;code&gt;hugo&lt;/code&gt; (or &lt;code&gt;hugo.exe&lt;/code&gt; on Windows) somewhere in your &lt;code&gt;PATH&lt;/code&gt; as we will be using it in the next step.&lt;/p&gt;

&lt;p&gt;More complete instructions are available at &lt;a href=&#34;http://tutswiki.com/overview/installing/&#34;&gt;Installing Hugo&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;step-2-have-hugo-create-a-site-for-you&#34;&gt;Step 2. Have Hugo Create a site for you&lt;/h2&gt;

&lt;p&gt;Hugo has the ability to create a skeleton site:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo new site /path/to/site
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For the rest of the operations, we will be executing all commands from within the site directory.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd /path/to/site
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The new site will have the following structure&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  ▸ archetypes/
  ▸ content/
  ▸ layouts/
  ▸ static/
    config.toml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Currently the site doesn’t have any content, nor is it configured.&lt;/p&gt;

&lt;h2 id=&#34;step-3-create-some-content&#34;&gt;Step 3. Create Some Content&lt;/h2&gt;

&lt;p&gt;Hugo also has the ability to create a skeleton content page:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo new about.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A new file is now created in &lt;code&gt;content/&lt;/code&gt; with the following contents:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;+++
date = &amp;quot;2015-01-08T08:36:54-07:00&amp;quot;
draft = true
title = &amp;quot;about&amp;quot;

+++

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Notice the date is automatically set to the moment you created the content.&lt;/p&gt;

&lt;p&gt;Place some content in Markdown format below the &lt;code&gt;+++&lt;/code&gt; in this file.
For example:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;## A headline

Some Content
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For fun, let’s create another piece of content and place some Markdown in it as well.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo new post/first.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The new file is located at &lt;code&gt;content/post/first.md&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We still lack any templates to tell us how to display the content.&lt;/p&gt;

&lt;h2 id=&#34;step-4-install-some-themes&#34;&gt;Step 4. Install some themes&lt;/h2&gt;

&lt;p&gt;Hugo has rich theme support and a growing set of themes to choose from.
To install all of the available Hugo themes, simply clone the entire &lt;strong&gt;hugoThemes&lt;/strong&gt; repository from within your working directory:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git clone --recursive https://github.com/spf13/hugoThemes themes
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;step-5-run-hugo&#34;&gt;Step 5. Run Hugo&lt;/h2&gt;

&lt;p&gt;Hugo contains its own high-performance web server. Simply run &lt;code&gt;hugo
server&lt;/code&gt; and Hugo will find an available port and run a server with
your content:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo server --theme=hyde --buildDrafts
2 pages created
0 tags created
0 categories created
in 5 ms
Serving pages from exampleHugoSite/public
Web Server is available at http://localhost:1313
Press Ctrl+C to stop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We specified two options here:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--theme&lt;/code&gt; to pick which theme;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--buildDrafts&lt;/code&gt; because we want to display our content, both set to draft status.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To learn about what other options hugo has, run:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo help
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To learn about the server options:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo help server
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;step-6-edit-content&#34;&gt;Step 6. Edit Content&lt;/h2&gt;

&lt;p&gt;Not only can Hugo run a server, but it can also watch your files for
changes and automatically rebuild your site. Hugo will then
communicate with your browser and automatically reload any open page.
This even works in mobile browsers.&lt;/p&gt;

&lt;p&gt;Stop the Hugo process by hitting &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;C&lt;/kbd&gt;. Then run the following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo server --theme=hyde --buildDrafts --watch
2 pages created
0 tags created
0 categories created
in 5 ms
Watching for changes in exampleHugoSite/content
Serving pages from exampleHugoSite/public
Web Server is available at http://localhost:1313
Press Ctrl+C to stop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Open your &lt;a href=&#34;http://vim.spf13.com/&#34;&gt;favorite editor&lt;/a&gt;, edit and save your content, and watch as Hugo rebuilds and reloads automatically.&lt;/p&gt;

&lt;p&gt;It’s especially productive to leave a browser open on a second monitor
and just glance at it whenever you save. You don’t even need to tab to
your browser. Hugo is so fast that the new site will be there before
you can look at the browser in most cases.&lt;/p&gt;

&lt;p&gt;Change and save this file. Notice what happened in your terminal:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Change detected, rebuilding site

2 pages created
0 tags created
0 categories created
in 5 ms
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;step-7-have-fun&#34;&gt;Step 7. Have fun&lt;/h2&gt;

&lt;p&gt;The best way to learn something is to play with it.&lt;/p&gt;

&lt;p&gt;Things to try:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add a &lt;a href=&#34;http://tutswiki.com/content/organization/&#34;&gt;new content file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Create a &lt;a href=&#34;http://tutswiki.com/content/sections/&#34;&gt;new section&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Modify &lt;a href=&#34;http://tutswiki.com/layout/templates/&#34;&gt;a template&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Create content with &lt;a href=&#34;http://tutswiki.com/content/front-matter/&#34;&gt;TOML front matter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Define your own field in &lt;a href=&#34;http://tutswiki.com/content/front-matter/&#34;&gt;front matter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Display that &lt;a href=&#34;http://tutswiki.com/layout/variables/&#34;&gt;field in the template&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Create a &lt;a href=&#34;http://tutswiki.com/content/types/&#34;&gt;new content type&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Installing Hugo</title>
      <link>http://tutswiki.com/overview/installing/</link>
      <pubDate>Mon, 01 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>http://tutswiki.com/overview/installing/</guid>
      <description>

&lt;p&gt;Hugo is written in &lt;a href=&#34;http://golang.org/&#34;&gt;Go&lt;/a&gt; with support for multiple platforms.&lt;/p&gt;

&lt;p&gt;The latest release can be found at &lt;a href=&#34;https://github.com/spf13/hugo/releases&#34;&gt;Hugo Releases&lt;/a&gt;.
We currently provide pre-built binaries for
&lt;i class=&#34;fa fa-windows&#34;&gt;&lt;/i&gt;&amp;nbsp;Windows,
&lt;i class=&#34;fa fa-linux&#34;&gt;&lt;/i&gt;&amp;nbsp;Linux,
&lt;i class=&#34;fa freebsd-19px&#34;&gt;&lt;/i&gt;&amp;nbsp;FreeBSD
and &lt;i class=&#34;fa fa-apple&#34;&gt;&lt;/i&gt;&amp;nbsp;OS&amp;nbsp;X (Darwin)
for x64, i386 and ARM architectures.&lt;/p&gt;

&lt;p&gt;Hugo may also be compiled from source wherever the Go compiler tool chain can run, e.g. for other operating systems including DragonFly BSD, OpenBSD, Plan&amp;nbsp;9 and Solaris.  See &lt;a href=&#34;http://golang.org/doc/install/source&#34;&gt;http://golang.org/doc/install/source&lt;/a&gt; for the full set of supported combinations of target operating systems and compilation architectures.&lt;/p&gt;

&lt;h2 id=&#34;installing-hugo-binary&#34;&gt;Installing Hugo (binary)&lt;/h2&gt;

&lt;p&gt;Installation is very easy. Simply download the appropriate version for your
platform from &lt;a href=&#34;https://github.com/spf13/hugo/releases&#34;&gt;Hugo Releases&lt;/a&gt;.
Once downloaded it can be run from anywhere. You don&amp;rsquo;t need to install
it into a global location. This works well for shared hosts and other systems
where you don&amp;rsquo;t have a privileged account.&lt;/p&gt;

&lt;p&gt;Ideally, you should install it somewhere in your &lt;code&gt;PATH&lt;/code&gt; for easy use.
&lt;code&gt;/usr/local/bin&lt;/code&gt; is the most probable location.&lt;/p&gt;

&lt;p&gt;On OS&amp;nbsp;X, if you have &lt;a href=&#34;http://brew.sh/&#34;&gt;Homebrew&lt;/a&gt;, installation is even
easier: just run &lt;code&gt;brew install hugo&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&#34;installing-pygments-optional&#34;&gt;Installing Pygments (optional)&lt;/h3&gt;

&lt;p&gt;The Hugo executable has one &lt;em&gt;optional&lt;/em&gt; external dependency for source code highlighting (Pygments).&lt;/p&gt;

&lt;p&gt;If you want to have source code highlighting using the &lt;a href=&#34;http://tutswiki.com/extras/highlighting/&#34;&gt;highlight shortcode&lt;/a&gt;,
you need to install the Python-based Pygments program. The procedure is outlined on the &lt;a href=&#34;http://pygments.org/&#34;&gt;Pygments home page&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;upgrading-hugo&#34;&gt;Upgrading Hugo&lt;/h2&gt;

&lt;p&gt;Upgrading Hugo is as easy as downloading and replacing the executable you’ve
placed in your &lt;code&gt;PATH&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;installing-from-source&#34;&gt;Installing from source&lt;/h2&gt;

&lt;h3 id=&#34;prerequisite-tools-for-downloading-and-building-source-code&#34;&gt;Prerequisite tools for downloading and building source code&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://git-scm.com/&#34;&gt;Git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://mercurial.selenic.com/&#34;&gt;Mercurial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://golang.org/&#34;&gt;Go&lt;/a&gt; 1.3+ (Go 1.4+ on Windows, see Go &lt;a href=&#34;https://code.google.com/p/go/issues/detail?id=8090&#34;&gt;Issue #8090&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;get-directly-from-github&#34;&gt;Get directly from GitHub&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ export GOPATH=$HOME/go
$ go get -v github.com/spf13/hugo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;go get&lt;/code&gt; will then fetch Hugo and all its dependent libraries to your
&lt;code&gt;$GOPATH/src&lt;/code&gt; directory, and compile everything into the final &lt;code&gt;hugo&lt;/code&gt;
(or &lt;code&gt;hugo.exe&lt;/code&gt;) executable, which you will find sitting in the
&lt;code&gt;$GOPATH/bin/&lt;/code&gt; directory, all ready to go!&lt;/p&gt;

&lt;p&gt;You may run &lt;code&gt;go get&lt;/code&gt; with the &lt;code&gt;-u&lt;/code&gt; option to update Hugo&amp;rsquo;s dependencies:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ go get -u -v github.com/spf13/hugo
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;contributing&#34;&gt;Contributing&lt;/h2&gt;

&lt;p&gt;Please see the &lt;a href=&#34;http://tutswiki.com/doc/contributing/&#34;&gt;contributing guide&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>