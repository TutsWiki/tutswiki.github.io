<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorials-rsses on </title>
    <link>http://tutswiki.com/tutorials/index.xml</link>
    <description>Recent content in Tutorials-rsses on </description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 10 May 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://tutswiki.com/tutorials/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Chapter 1 - Reading from a CSV</title>
      <link>http://tutswiki.com/pandas-cookbook/chapter1</link>
      <pubDate>Wed, 10 May 2017 00:00:00 +0000</pubDate>
      
      <guid>http://tutswiki.com/pandas-cookbook/chapter1</guid>
      <description>

&lt;h2 id=&#34;1-1-reading-data-from-a-csv-file&#34;&gt;1.1 Reading data from a CSV file&lt;/h2&gt;

&lt;p&gt;You can read data from a CSV file using the &lt;a href=&#34;http://pandas.pydata.org/pandas-docs/stable/generated/pandas.read_csv.html&#34;&gt;read_csv&lt;/a&gt; function. By default, it assumes that the fields are comma-separated.&lt;/p&gt;

&lt;p&gt;We&amp;rsquo;re going to be looking some cyclist data from Montréal. Here&amp;rsquo;s the &lt;a href=&#34;http://donnees.ville.montreal.qc.ca/dataset/velos-comptage&#34;&gt;original page&lt;/a&gt; (in French), you can get it from &lt;a href=&#34;http://tutswiki.com/bikes.csv&#34;&gt;this link&lt;/a&gt;. We&amp;rsquo;re using the data from 2012.&lt;/p&gt;

&lt;p&gt;This dataset is a list of how many people were on 7 different bike paths in Montreal, each day.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;broken_df = pd.read_csv(&#39;bikes.csv&#39;)
# Look at the first 3 rows
print broken_df[:3]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Output:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  Date;Berri 1;Br?beuf (donn?es non disponibles);C?te-Sainte-Catherine;Maisonneuve 1;Maisonneuve 2;du Parc;Pierre-Dupuy;Rachel1;St-Urbain (donn?es non disponibles)
0                   01/01/2012;35;;0;38;51;26;10;16;                                                                                                               
1                   02/01/2012;83;;1;68;153;53;6;43;                                                                                                               
2                 03/01/2012;135;;2;104;248;89;3;58;   
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You&amp;rsquo;ll notice that this is totally broken! read_csv has a bunch of options that will let us fix that, though. Here we&amp;rsquo;ll&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Change the column separator to a ;&lt;/li&gt;
&lt;li&gt;Set the encoding to &amp;lsquo;&lt;em&gt;latin1&lt;/em&gt;&amp;rsquo; (the default is &amp;lsquo;&lt;em&gt;utf8&lt;/em&gt;&amp;rsquo;)&lt;/li&gt;
&lt;li&gt;Parse the dates in the &amp;lsquo;Date&amp;rsquo; column&lt;/li&gt;
&lt;li&gt;Tell it that our dates have the date first instead of the month first&lt;/li&gt;
&lt;li&gt;Set the index to be the &amp;lsquo;Date&amp;rsquo; column&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;fixed_df = pd.read_csv(&#39;bikes.csv&#39;, sep=&#39;;&#39;, encoding=&#39;latin1&#39;, parse_dates=[&#39;Date&#39;], dayfirst=True, index_col=&#39;Date&#39;)
print fixed_df[:3]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Output:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Date&lt;/th&gt;
&lt;th&gt;Berri 1&lt;/th&gt;
&lt;th&gt;Brébeuf  (données  non  disponibles)&lt;/th&gt;
&lt;th&gt;Côte- Sainte- Catherine&lt;/th&gt;
&lt;th&gt;Maisonneuve 1&lt;/th&gt;
&lt;th&gt;Maisonneuve 2&lt;/th&gt;
&lt;th&gt;du Parc&lt;/th&gt;
&lt;th&gt;Pierre- Dupuy&lt;/th&gt;
&lt;th&gt;Rachel1&lt;/th&gt;
&lt;th&gt;St-Urbain (données  non  disponibles)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2012-01-01&lt;/td&gt;
&lt;td&gt;35&lt;/td&gt;
&lt;td&gt;NaN&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;38&lt;/td&gt;
&lt;td&gt;51&lt;/td&gt;
&lt;td&gt;26&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;NaN&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;2012-01-02&lt;/td&gt;
&lt;td&gt;83&lt;/td&gt;
&lt;td&gt;NaN&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;68&lt;/td&gt;
&lt;td&gt;153&lt;/td&gt;
&lt;td&gt;53&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;43&lt;/td&gt;
&lt;td&gt;NaN&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;2012-01-03&lt;/td&gt;
&lt;td&gt;135&lt;/td&gt;
&lt;td&gt;NaN&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;104&lt;/td&gt;
&lt;td&gt;248&lt;/td&gt;
&lt;td&gt;89&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;58&lt;/td&gt;
&lt;td&gt;NaN&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
    </item>
    
  </channel>
</rss>