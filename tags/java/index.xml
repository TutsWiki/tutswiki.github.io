<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Java on TutsWiki Beta</title><link>https://tutswiki.com/tags/java/</link><description>Recent content in Java on TutsWiki Beta</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 22 Aug 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://tutswiki.com/tags/java/index.xml" rel="self" type="application/rss+xml"/><item><title>Classes &amp; Objects</title><link>https://tutswiki.com/java/class-object/</link><pubDate>Sat, 22 Aug 2020 00:00:00 +0000</pubDate><guid>https://tutswiki.com/java/class-object/</guid><description>Objects Java is an object-oriented language meaning it follows the object-oriented programming (OOPS) paradigm. The OOPS principle looks at any problem as an interaction between various objects. This, in turn, helps us to solve real-world problems easily because most of it involves objects. Objects are described by their intrinsic properties ( in coding terms some base data ) and how they can interact within the object and also with other objects ( in coding terms some functionality over the data ).</description></item><item><title>Constructors</title><link>https://tutswiki.com/java/constructors/</link><pubDate>Sat, 22 Aug 2020 00:00:00 +0000</pubDate><guid>https://tutswiki.com/java/constructors/</guid><description>Object Initialization We know that in Java classes are blueprints and objects are the actual entities created by following the design of the blueprint. To create an object we need to initialize it or in simpler terms assign resources like memory, initialize instance variables, load methods, etc. If we don&amp;rsquo;t do this Java assigns the object a null value on the declaration of the object. In Java, we use the new keyword to initialize an object whose class/type is not of the primitive types.</description></item><item><title>Exceptions in Java</title><link>https://tutswiki.com/java/exceptions/</link><pubDate>Sat, 22 Aug 2020 00:00:00 +0000</pubDate><guid>https://tutswiki.com/java/exceptions/</guid><description>Exceptions An exception in java is defined as an unwanted or unexpected event, which arises at the time of execution of a program i.e. at run time which disturbs the normal flow or working of our program.
For better understanding, consider the following scenario where you have planned to watch a movie in a nearby theater and you got ready and departed from your house but in the mid-way, your vehicle got punctured and for reaching your destination you took a taxi.</description></item><item><title>Generics in Java</title><link>https://tutswiki.com/java/generics/</link><pubDate>Sat, 22 Aug 2020 00:00:00 +0000</pubDate><guid>https://tutswiki.com/java/generics/</guid><description>Generics in Java is the facility which is provided to the user to make a single method or single class that can be compatible with any data type like a single method can operate on integer type or string type or even object type. If you are familiar with template in C++, then you can consider generics as a template in Java. In simple words, generic methods(or classes) are those methods that are written with single method declaration and can be called or accessed with arguments of different type.</description></item></channel></rss>