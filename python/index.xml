<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on TutsWiki Beta</title><link>https://tutswiki.com/python/</link><description>Recent content in Python on TutsWiki Beta</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 08 Sep 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://tutswiki.com/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction</title><link>https://tutswiki.com/python/introduction/</link><pubDate>Wed, 26 Aug 2020 00:00:00 +0000</pubDate><guid>https://tutswiki.com/python/introduction/</guid><description>This Google Trends analysis shows how the interest of Python worldwide scaled up above all other Object-Oriented Programming languages in the last few years. Almost every industry worldwide is using Python somehow due to its wide range of applications and easy to understand syntax. So, learning Python would make you a proficient software developer who is job-ready and can apply his/her skills to solve real-world problems.
Another great reason for learning Python is itâ€™s large Open Source community.</description></item><item><title>Decorators in Python</title><link>https://tutswiki.com/python/decorators/</link><pubDate>Tue, 08 Sep 2020 00:00:00 +0000</pubDate><guid>https://tutswiki.com/python/decorators/</guid><description>Have you ever heard about Gift wrappings? Exactly, those which we do on the presents to be gifted. Decorators in Python are nothing but the Gift Wrapping but for functions and classes. In this tutorial, we will deep dive into the implementation of decorators on functions. But before you get into the topic, you should have a proper understanding of functions in Python. Assuming that you have, let&amp;rsquo;s get started.</description></item></channel></rss>